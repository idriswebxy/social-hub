{"ast":null,"code":"var _jsxFileName = \"/Users/chrono/Desktop/Web-Dev-Projects/social-hub/client/src/components/Posts/Posts.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../Layout/Spinner\";\nimport PostItem from \"../Posts/PostItem\";\nimport CommentForm from \"../Post/CommentForm\";\nimport CommentItem from \"../Post/CommentItem\";\nimport { getPosts } from \"../../actions/post\";\n\nconst Post = ({\n  getPosts,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, post.comments.map(comment => React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Post);","map":{"version":3,"sources":["/Users/chrono/Desktop/Web-Dev-Projects/social-hub/client/src/components/Posts/Posts.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","PostItem","CommentForm","CommentItem","getPosts","Post","post","loading","match","_id","comments","map","comment","propTypes","getPost","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAIA,MAAMC,IAAI,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAlB;AAAqCC,EAAAA;AAArC,CAAD,KAAkD;AAC7DZ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAKA,SAAOG,OAAO,GACZ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAGZ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAIE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAED,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,IAAI,CAACG,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IACxB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACH,GAA1B;AAA+B,IAAA,OAAO,EAAEG,OAAxC;AAAiD,IAAA,MAAM,EAAEN,IAAI,CAACG,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CANF,CAHF;AAgBD,CAtBD;;AAwBAJ,IAAI,CAACQ,SAAL,GAAiB;AACfC,EAAAA,OAAO,EAAEjB,SAAS,CAACkB,IAAV,CAAeC,UADT;AAEfV,EAAAA,IAAI,EAAET,SAAS,CAACoB,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADoB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CACpBmB,eADoB,EAEpB;AAAEd,EAAAA;AAAF,CAFoB,CAAP,CAGbC,IAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../Layout/Spinner\";\nimport PostItem from \"../Posts/PostItem\";\nimport CommentForm from \"../Post/CommentForm\";\nimport CommentItem from \"../Post/CommentItem\";\nimport { getPosts } from \"../../actions/post\";\n\n\n\nconst Post = ({ getPosts, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  \n  return loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to=\"/posts\" className=\"btn\">\n        Back To Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className=\"comments\">\n        {post.comments.map(comment => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(\n  mapStateToProps,\n  { getPosts }\n)(Post);\n"]},"metadata":{},"sourceType":"module"}