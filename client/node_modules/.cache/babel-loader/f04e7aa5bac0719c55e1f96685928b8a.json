{"ast":null,"code":"var _jsxFileName = \"/Users/chrono/Desktop/Web-Dev-Projects/social-hub/client/src/components/Profile/Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport Spinner from \"../Layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport ProfileAbout from \"./ProfileAbout\";\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Back To Profiles\"), React.createElement(ProfileAbout, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Edit Profile\")));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/chrono/Desktop/Web-Dev-Projects/social-hub/client/src/components/Profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","getProfileById","ProfileAbout","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,MAAMC,OAAO,GAAG,CAAC;AACfF,EAAAA,cADe;AAEfG,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAFM;AAGfC,EAAAA,IAHe;AAIfC,EAAAA;AAJe,CAAD,KAKV;AAEJX,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEP,CAACR,cAAD,EAAiBM,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFO,CAAT;AAKA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAIE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAED,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKGE,IAAI,CAACI,eAAL,IACCJ,IAAI,CAACD,OAAL,KAAiB,KADlB,IAECC,IAAI,CAACK,IAAL,CAAUC,GAAV,KAAkBR,OAAO,CAACO,IAAR,CAAaC,GAFhC,IAGG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARN,CAJJ,CADF;AAqBD,CAjCD;;AAoCAT,OAAO,CAACU,SAAR,GAAoB;AAClBZ,EAAAA,cAAc,EAAEJ,SAAS,CAACiB,IAAV,CAAeC,UADb;AAElBX,EAAAA,OAAO,EAAEP,SAAS,CAACmB,MAAV,CAAiBD,UAFR;AAGlBT,EAAAA,IAAI,EAAET,SAAS,CAACmB,MAAV,CAAiBD;AAHL,CAApB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,OAAO,EAAEc,KAAK,CAACd,OADiB;AAEhCE,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AAFoB,CAAL,CAA7B;;AAMA,eAAeP,OAAO,CAACkB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport Spinner from \"../Layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport ProfileAbout from \"./ProfileAbout\";\n\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match\n}) => {\n\n  useEffect(() => {\n    getProfileById(match.params.id)\n  },[getProfileById, match.params.id])\n\n\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to='/profiles' className='btn btn-light'>\n            Back To Profiles\n          </Link>\n          <ProfileAbout profile={profile} />\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n        </Fragment>\n      )}\n    </Fragment>\n  )\n}\n\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n})\n\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}