{"ast":null,"code":"var _jsxFileName = \"/Users/chrono/Desktop/Web-Dev-Projects/social-hub/client/src/components/Dashboard/Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner.js\";\nimport { getCurrentProfile } from \"../../actions/profile\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile == null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \" Test \");\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/chrono/Desktop/Web-Dev-Projects/social-hub/client/src/components/Dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","profile","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAAED,EAAAA,iBAAF;AAAqBE,EAAAA,IAArB;AAA2BC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAApC,CAAD,KAAgE;AAEhFT,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOI,OAAO,IAAID,OAAO,IAAI,IAAtB,GAA6B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,GAA2C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlD;AAED,CARD;;AAYAF,SAAS,CAACI,SAAV,GAAsB;AACpBL,EAAAA,iBAAiB,EAAEH,SAAS,CAACS,IAAV,CAAeC,UADd;AAEpBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBD,UAFH;AAGpBJ,EAAAA,OAAO,EAAEN,SAAS,CAACW,MAAV,CAAiBD;AAHN,CAAtB;;AAOA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR,IADsB;AAElCC,EAAAA,OAAO,EAAEO,KAAK,CAACP;AAFmB,CAAZ,CAAxB;;AAMA,eAAeL,OAAO,CAACW,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAAgDC,SAAhD,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner.js\";\nimport { getCurrentProfile } from \"../../actions/profile\";\n \n\n\nconst Dashboard = ({ getCurrentProfile, auth, profile: { profile, loading } }) => {\n\n  useEffect(() => {\n    getCurrentProfile();\n  }, [])\n\n  return loading && profile == null ? <Spinner /> : <Fragment> Test </Fragment>\n\n}\n\n\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile\n})\n\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}