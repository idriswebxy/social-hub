{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from \"./types\"; // Get posts \n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // Add like \n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(\"/api/posts/like/\".concat(id));\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // Remove Like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = axios.put(\"api/posts/unlike/\".concat(id));\n    dispatch({\n      type: \"UPDATE_LIKES\",\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // Get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts/\".concat(id));\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(\"/api/posts/comment/\".concat(postId), formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete comment\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await axios.delete(\"/api/posts/comment/\".concat(postId, \"/\").concat(commentId));\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/chrono/Desktop/Web-Dev-Projects/social-hub/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","error","msg","response","statusText","status","addLike","id","put","likes","removeLike","getPost","err","addComment","postId","formData","config","headers","post","deleteComment","commentId","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from \"./types\"\n\n\n\n// Get posts \nexport const getPosts = () => async dispatch => {\n  \n  try {\n    const res = axios.get('/api/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    })\n  } \n  catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: error.response.statusText, status: error.response.status }\n    })\n  }\n}\n\n\n// Add like \nexport const addLike = id => async dispatch => {\n\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    })\n  } \n  catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: error.response.statusText, status: error.response.status }\n    })\n  }\n}\n\n\n// Remove Like\nexport const removeLike = id => async dispatch => {\n\n  try {\n    const res = axios.put(`api/posts/unlike/${id}`);\n\n    dispatch({\n      type: \"UPDATE_LIKES\",\n      payload: { id, likes: res.data }\n    });\n\n  } \n  catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: error.response.statusText, status: error.response.status }\n    });  \n  }\n};\n\n\n// Get post\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}